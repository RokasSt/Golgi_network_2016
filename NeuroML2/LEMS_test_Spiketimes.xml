<Lems>

    

    <Target component="sim1"/>

    <Include file="NeuroMLCoreDimensions.xml"/>
    <Include file="Cells.xml"/>
    <Include file="Networks.xml"/>
    <Include file="Simulation.xml"/>
   
    
   <expOneSynapse id="MFSpikeSyn" gbase="1.5nS" tauDecay="0.7ms"  erev="0mV"/> 
   
  <!-- <poissonFiringSynapse id="input0" averageRate="10 Hz" synapse="MFSpikeSyn" spikeTarget="./MFSpikeSyn"/>-->


    <iafCell id="iaf1" leakReversal="-60mV" thresh="-40mV" reset="-65mV" C="1e-5uF" leakConductance="5e-7mS"/>
    <iafCell id="iaf2" leakReversal="-60mV" thresh="-40mV" reset="-70mV" C="1e-5uF" leakConductance="5.2e-7mS"/>


    <spikeArray id="spkArr">
      <spike id="0" time="50 ms"/>
      <spike id="1" time="100 ms"/>
      <spike id="2" time="150 ms"/>
      <spike id="3" time="155 ms"/>
      <spike id="4" time="250 ms"/>
    </spikeArray>


    <network id="net2">
     <population id="Pop0" component="spkArr" size="1">
           
       </population>
      <!-- <population id="Pop0" type="populationList" component="spkArr" size="1">
            <instance id="0">
                <location y="18.479072879420954" x="27.445488664662598" z="44.171494071238925"/>
            </instance>
       </population>-->

       <population id="Pop1" type="populationList" component="iaf1" size="1">
            <instance id="0">
                <location y="0.007500392240689" x="5.218493548048375" z="56.261704365605539"/>
            </instance>
       </population>

       <!-- <population id="Pop0" component="spkArr" size="1"/>
      
        <population id="Pop1" component="iaf1" size="1"/>-->
        <population id="Pop2" component="iaf1" size="3"/>
        
         <!--<synapticConnection from="Pop0[0]" to="Pop1[0]" synapse="MFSpikeSyn" destination="synapses"/>-->

         <projection id="Proj0" postsynapticPopulation="Pop1" presynapticPopulation="Pop0" synapse="MFSpikeSyn">
            <connection id="0" preCellId="../Pop0[0]" preSegmentId="0" preFractionAlong="0.5" postCellId="../Pop1/0/iaf1"/>
         </projection>
          
        <!-- <inputList id="stimInput" component="input0" population="Pop2">
           
            <input id="0" target="../Pop2[0]" destination="synapses"/>
            <input id="1" target="../Pop2[1]" destination="synapses"/>
            <input id="1" target="../Pop2[2]" destination="synapses"/>
        </inputList>-->



    </network>

    

    <Simulation id="sim1" length="600ms" step="0.005ms" target="net2">

        

        <Display id="d1" title="Test spike time inputs" timeScale="1ms" xmin="0" xmax="600" ymin="-100" ymax="20">
            
            <Line id="pop1" quantity="Pop1/0/iaf1/v" scale="1mV" color="#00ff00" timeScale="1ms"/>
            
            
            
      </Display>

       <!--  <Display id="d2" title="Poissson synapse tsince" timeScale="1ms" xmin="0" xmax="600" ymin="-20" ymax="700">
            
           <Line id ="poison firing synapse time since" quantity="Pop2[0]/input0/tsince" scale="1ms" color="#3fffaa" timeScale="1ms"/>
            
            
        </Display>
 
        <Display id="d3" title="Poissson synapse v" timeScale="1ms" xmin="0" xmax="600" ymin="-100" ymax="700">
            
           <Line id ="Poisson synapse voltage" quantity="Pop2[0]/input0/v" scale="1ms" color="#3fffaa" timeScale="1ms"/>
            
            
        </Display>-->
 
        

       
       
      <!--  <EventOutputFile id="Input_spikes0" fileName="results/Input_spikesPoisson0" format="ID_TIME">
            <EventSelection id="0" select="Pop2[0]/input0" eventPort="spike"/>
        </EventOutputFile>

        <EventOutputFile id="Input_spikes1" fileName="results/Input_spikesPoisson1" format="ID_TIME">
            <EventSelection id="0" select="Pop2[1]/input0" eventPort="spike"/>
        </EventOutputFile>

         
        <EventOutputFile id="Input_spikes2" fileName="results/Input_spikesPoisson2" format="ID_TIME">
            <EventSelection id="0" select="Pop2[2]/input0" eventPort="spike"/>
        </EventOutputFile>-->

         
       
    </Simulation>


</Lems>


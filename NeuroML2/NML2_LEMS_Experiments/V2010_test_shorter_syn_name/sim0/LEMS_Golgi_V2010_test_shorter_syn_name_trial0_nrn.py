'''
Neuron simulator export for:

Components:
    null (Type: include)
    null (Type: include)
    XFpop0l_MF_Golgi_pop0_syn0 (Type: transientPoissonFiringSynapse:  averageRate=200.0 (SI per_time) delay=0.6 (SI time) duration=0.01 (SI time) averageIsi=0.005 (SI time) LONG_TIME=3.6E12 (SI time))
    Golgi_V2010_test_shorter_syn_name_trial0_network (Type: networkWithTemperature:  temperature=296.15 (SI temperature))
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    null (Type: include)
    Golgi_040408_C1 (Type: cell2CaPools)
    null (Type: notes)
    Golgi_Ca_HVA (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_Ca_LVA (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_CALC (Type: decayingPoolConcentrationModel:  restingConc=5.0E-5 (SI concentration) decayConstant=7.69231E-4 (SI time) shellThickness=2.0378E-7 (SI length) Faraday=96485.3 (SI charge_per_mole) AREA_SCALE=1.0 (SI area) LENGTH_SCALE=1.0 (SI length))
    null (Type: notes)
    Golgi_CALC_ca2 (Type: decayingPoolConcentrationModel_independentCa:  restingConc=5.0E-5 (SI concentration) decayConstant=7.69231E-4 (SI time) shellThickness=2.0378E-7 (SI length) Faraday=96485.3 (SI charge_per_mole) AREA_SCALE=1.0 (SI area) LENGTH_SCALE=1.0 (SI length))
    null (Type: notes)
    Golgi_hcn1f (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_hcn1s (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_hcn2f (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_hcn2s (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_KA (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_KC (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_Kslow (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_KAHP (Type: ionChannelKS:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_KV (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    LeakCond (Type: ionChannelPassive:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_NaP (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_NaR (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    null (Type: notes)
    Golgi_NaT (Type: ionChannelHH:  conductance=1.0E-11 (SI conductance))
    MF (Type: expThreeSynapse:  tauRise=1.0E-4 (SI time) tauDecay1=7.0E-4 (SI time) tauDecay2=0.0025 (SI time) peakTime1=2.270228507231199E-4 (SI time) waveformFactor1=1.61360214664657 (dimensionless) peakTime2=3.3529956509043755E-4 (SI time) waveformFactor2=1.1911769125863751 (dimensionless) gbase1=7.0E-10 (SI conductance) gbase2=2.0000000000000003E-10 (SI conductance) erev=0.0 (SI voltage))
    Golgi_V2010_test_shorter_syn_name_trial0 (Type: Simulation:  length=3.5 (SI time) step=3.0E-7 (SI time))


    This NEURON file has been generated by org.neuroml.export (see https://github.com/NeuroML/org.neuroml.export)
         org.neuroml.export  v1.4.4
         org.neuroml.model   v1.4.4
         jLEMS               v0.9.8.4

'''

import neuron

import time
h = neuron.h
h.load_file("stdlib.hoc")

h.load_file("stdgui.hoc")

h("objref p")
h("p = new PythonObject()")

# Adding simulation Component(id=Golgi_V2010_test_shorter_syn_name_trial0 type=Simulation) of network/component: Golgi_V2010_test_shorter_syn_name_trial0_network (Type: networkWithTemperature:  temperature=296.15 (SI temperature))

# Temperature used for network: 296.15 K
h.celsius = 296.15 - 273.15

print("Population Golgi_pop0 contains 1 instance(s) of component: Golgi_040408_C1 of type: cell2CaPools")

print("Setting the default initial concentrations for ca (used in Golgi_040408_C1) to 5.0E-5 mM (internal), 2.0 mM (external)")
h("cai0_ca_ion = 5.0E-5")
h("cao0_ca_ion = 2.0")

print("Setting the default initial concentrations for ca2 (used in Golgi_040408_C1) to 5.0E-5 mM (internal), 2.0 mM (external)")
h("ca2i0_ca2_ion = 5.0E-5")
h("ca2o0_ca2_ion = 2.0")

h.load_file("Golgi_040408_C1.hoc")
a_Golgi_pop0 = []
h("n_Golgi_pop0 = 1")
h("objectvar a_Golgi_pop0[n_Golgi_pop0]")
for i in range(int(h.n_Golgi_pop0)):
    h("a_Golgi_pop0[%i] = new Golgi_040408_C1()"%i)
    h("access a_Golgi_pop0[%i].Soma"%i)

h("a_Golgi_pop0[0].position(27.641235845830238, 13.552242186419361, 24.007435700354286)")

h("proc initialiseV_Golgi_pop0() { for i = 0, n_Golgi_pop0-1 { a_Golgi_pop0[i].set_initial_v() } }")
h("objref fih_Golgi_pop0")
h('{fih_Golgi_pop0 = new FInitializeHandler(0, "initialiseV_Golgi_pop0()")}')

h("proc initialiseIons_Golgi_pop0() { for i = 0, n_Golgi_pop0-1 { a_Golgi_pop0[i].set_initial_ion_properties() } }")
h("objref fih_ion_Golgi_pop0")
h('{fih_ion_Golgi_pop0 = new FInitializeHandler(1, "initialiseIons_Golgi_pop0()")}')

# Adding input: Component(id=0 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_0")
h("a_Golgi_pop0[0].SecDendriteCyan_1_R_1 { List_XFpop0l_MF_Golgi_pop0_syn0_0 = new XFpop0l_MF_Golgi_pop0_syn0(0.592487) } ")

# Adding input: Component(id=1 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_1")
h("a_Golgi_pop0[0].SecDendriteDarkYellow_1_1_R_2 { List_XFpop0l_MF_Golgi_pop0_syn0_1 = new XFpop0l_MF_Golgi_pop0_syn0(0.728004) } ")

# Adding input: Component(id=2 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_2")
h("a_Golgi_pop0[0].SecDendriteCyan_1_R_2_1 { List_XFpop0l_MF_Golgi_pop0_syn0_2 = new XFpop0l_MF_Golgi_pop0_syn0(0.051257) } ")

# Adding input: Component(id=3 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_3")
h("a_Golgi_pop0[0].SecDendriteBlue_1_R { List_XFpop0l_MF_Golgi_pop0_syn0_3 = new XFpop0l_MF_Golgi_pop0_syn0(0.630718) } ")

# Adding input: Component(id=4 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_4")
h("a_Golgi_pop0[0].SecDendriteCyan_1_R_2_1 { List_XFpop0l_MF_Golgi_pop0_syn0_4 = new XFpop0l_MF_Golgi_pop0_syn0(0.572404) } ")

# Adding input: Component(id=5 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_5")
h("a_Golgi_pop0[0].SecDendriteBlue_1_R { List_XFpop0l_MF_Golgi_pop0_syn0_5 = new XFpop0l_MF_Golgi_pop0_syn0(0.306745) } ")

# Adding input: Component(id=6 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_6")
h("a_Golgi_pop0[0].SecDendriteBlue_1_R_2 { List_XFpop0l_MF_Golgi_pop0_syn0_6 = new XFpop0l_MF_Golgi_pop0_syn0(0.773421) } ")

# Adding input: Component(id=7 type=input)

h("objectvar List_XFpop0l_MF_Golgi_pop0_syn0_7")
h("a_Golgi_pop0[0].SecDendriteBlue_1_R_1 { List_XFpop0l_MF_Golgi_pop0_syn0_7 = new XFpop0l_MF_Golgi_pop0_syn0(0.364616) } ")

trec = h.Vector()
trec.record(h._ref_t)

h.tstop = 3500

h.dt = 0.0003

h.steps_per_ms = 3333.3333



# File to save: time
# Column: time
h(' objectvar v_time ')
h(' { v_time = new Vector() } ')
h(' v_time.record(&t) ')
h.v_time.resize((h.tstop * h.steps_per_ms) + 1)

# File to save: Volts0_file0_0
# Column: Golgi_pop0/0/Golgi_040408_C1/v
h(' objectvar v_v0_Volts0_file0_0 ')
h(' { v_v0_Volts0_file0_0 = new Vector() } ')
h(' v_v0_Volts0_file0_0.record(&a_Golgi_pop0[0].Soma.v(0.5)) ')
h.v_v0_Volts0_file0_0.resize((h.tstop * h.steps_per_ms) + 1)



sim_start = time.time()
print("Running a simulation of %sms (dt = %sms)" % (h.tstop, h.dt))

h.run()

sim_end = time.time()
sim_time = sim_end - sim_start
print("Finished simulation in %f seconds (%f mins), saving results..."%(sim_time, sim_time/60.0))


# File to save: time
py_v_time = [ t/1000 for t in h.v_time.to_python() ]  # Convert to Python list for speed...

f_time_f2 = open('time.dat', 'w')
for i in range(int(h.tstop * h.steps_per_ms) + 1):
    f_time_f2.write('%f'% py_v_time[i])  # Save in SI units...+ '\n')
f_time_f2.close()
print("Saved data to: time.dat")

# File to save: Volts0_file0_0
py_v_v0_Volts0_file0_0 = [ float(x  / 1000.0) for x in h.v_v0_Volts0_file0_0.to_python() ]  # Convert to Python list for speed, variable has dim: voltage

f_Volts0_file0_0_f2 = open('/home/rokas/Golgi_network_2016/PyExperiments/simulations/V2010_test_shorter_syn_name/sim0/Golgi_pop0_cell0.dat', 'w')
for i in range(int(h.tstop * h.steps_per_ms) + 1):
    f_Volts0_file0_0_f2.write('%e\t'% py_v_time[i]  + '%e\t'%(py_v_v0_Volts0_file0_0[i]) + '\n')
f_Volts0_file0_0_f2.close()
print("Saved data to: /home/rokas/Golgi_network_2016/PyExperiments/simulations/V2010_test_shorter_syn_name/sim0/Golgi_pop0_cell0.dat")

save_end = time.time()
save_time = save_end - sim_end
print("Finished saving results in %f seconds"%(save_time))

print("Done")

quit()
